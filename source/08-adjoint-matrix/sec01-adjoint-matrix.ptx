<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-adjoint-matrix"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Adjoint Matrix</title>
    <introduction xml:id="sm-introduction-adjoint-matrix">
        <p>
            <idx>
                <h>Matrices</h>
                <h>Adjoint</h>
            </idx>
            In some fields, working over complex vector spaces is necessary and common. In these contexts,
            the <em>adjoint matrix</em> of a matrix <m>A</m> refers to its <em>conjugate transpose</em>. It
            is obtained by first taking the complex conjugate of each entry of <m>A</m>, and then transposing
            the resulting matrix.
        </p>
        <p>
            The adjoint of a matrix <m>A</m> is denoted by <m>A^{*}</m> and defined as:
            <m>A^{*} = \overline{A}^{T}</m> where <m>\overline{A}</m> represents the complex conjugate of <m>A</m>.
        </p>

        <p>
            It is important to note that this meaning of <em>adjoint</em> differs from
            the <em>adjugate</em> matrix, which will be defined later as the transpose of
            the cofactor matrix. The two concepts are conceptually distinct:
            <ul>
                <li><em>Adjoint:</em> involves complex conjugation and transposition.</li>
                <li><em>Adjugate:</em> involves cofactors and determinants (used in matrix inversion).</li>
            </ul>
            Sage has built-in method <c>conjugate_transpose</c> to compute the adjoint matrix as follows:
        </p>
        <sage>
            <input>
                # Define a 2x2 complex matrix
                C = matrix(CDF, [[1 + 2 * I, 3], [4, 5 - I]])
                C.conjugate_transpose()
            </input>
        </sage>
    </introduction>

    <subsection xml:id="subsec-minors-cofactors-and-adjugate">
        <title>Minors, Cofactors and the Adjugate Matrix</title>
        <p>
            <idx>
                <h>Matrices</h>
                <h>Adjugate</h>
                <h>Cofactor</h>
            </idx>
            The <em>adjugate</em> of a matrix <m>A</m> is the transpose of its cofactor matrix <m>C</m>:
            <m>adj(A)=C^T</m>. In Sage, the <c>adjugate</c> method returns the adjugate matrix.
        </p>
        <sage>
            <input>
                M.adjugate()
            </input>
        </sage>
        <p>
            Currently, Sage does not have an implementation to directly extract the <em>minors</em> of a matrix.
            To compute a minor <m>M_{ij}</m> of a matrix <m>A</m>, Sage offers <c>delete_rows()</c> and <c>delete_columns()</c>
            methods which can be used to delete a specific row <m>i</m> and column <m>j </m> and obtain a submatrix whose
            determinant yields a minor <m>M_{ij}</m>, which then can be used to compute the <em>cofactor</em>
            <m>c_{ij}=(-1)^{i+j}M_{ij}</m>.
        </p>
        <sage>
            <input>
                A = matrix([[1, 2, 3], [5, 7, 11], [13, 17, 19]])

                # By Removing first row and second column
                minor_1_2 = det(A.delete_rows([0]).delete_columns([1]))
                print("m_12:", minor_1_2)

                # Cofactor c_12
                cofactor_1_2=(-1)^(1+2) * minor_1_2
                print("c_12:", cofactor_1_2)
            </input>
        </sage>
        <p>
            Generally, given a square matrix of order <m>n \times n</m>, the cofactors are obtained by varying the row and column
            indices <m>i</m> and <m>j</m> from <m>1</m> to <m>n</m>. These computed cofactors constitute the entries of
            the cofactor matrix <m>C = \big[c_{ij}\big]</m>.
        </p>
        <sage>
            <input>
                n = A.nrows()

                # Cofactor matrix
                C = matrix([
                    [(-1)^(i + j) * det(A.delete_rows([i - 1]).delete_columns([j - 1])) for j in range(1, n + 1)]
                    for i in range(1, n + 1)
                ])
                C
            </input>
        </sage>
        <p>
            Note that the transpose of the cofactor matrix is the adjugate matrix
        </p>
        <sage>
            <input>
                A.adjugate() == C.transpose()
            </input>
        </sage>
        <p>
            The Adjugate matrix can then be used to compute the inverse of a non-singular matrix using the formula:
            <m>A^{-1} = \frac{1}{\det(A)} \cdot \text{adj}(A)</m>.
        </p>
        <sage>
            <input>
                A.inverse() == A.adjugate() / A.det()
            </input>
        </sage>
        <p>
            Note that the although methods <c>minor()</c> and <c>cofactor()</c> are currently not implemented in
            Sage, leveraging the command <c>adj</c> can help compute them, like shown below.
        </p>
        <sage>
            <input>
                cof = A.adjugate().transpose()

                # Cofactor c_12
                cofactor_1_2 = cof[0, 1]
                print("c_12:", cofactor_1_2)

                # Minor M_12
                minor_1_2 = cofactor_1_2 / ((-1)^(1 + 2))
                print("m_12:", minor_1_2)
            </input>
        </sage>
    </subsection>
</section>
