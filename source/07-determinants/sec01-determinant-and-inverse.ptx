<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-matrix-operations-determinant-and-inverse"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Determinant and Inverse</title>
    <introduction xml:id="sm-introduction-determinant-and-inverse">
        <p>
            <idx>
                <h>Matrices</h>
                <h>Determinant</h>
            </idx>
            The determinant of a square matrix <m>A</m> is a <em>multi-linear, alternating function</em> in both rows and columns:
            <ul>
                <li>It is linear in each row (or column) separately.</li>
                <li>If two rows (or columns) of the matrix are identical, its determinant is <m>0</m>.</li>
                <li>Multiplying a row (or column) by a scalar <m>k</m> multiplies <m>det(A)</m> by <m>k</m>.</li>
                <li>Swapping two rows (or columns) flips the sign of the determinant.</li>
            </ul>

            Therefore, doing a <em>row replacement</em> on <m>A</m> does not change <m>det(A)</m>. In other words,
            replacing any one row by itself, plus a multiple of another row:
            <m>\forall k \neq 0, R_i \leftarrow R_i + kÂ·R_j</m> (with <m>i \neq j</m>). This property also extends to
            <em>column replacements</em>.
        </p>
        <p>
            In addition, the determinant function must satisfy the following properties:
            <ul>
                <li>The determinant of the identity matrix is <m>1</m>, and the determinant of the zero matrix is <m>0</m>.</li>
                <li>If a matrix has a row (or column) of all zeros, its determinant is <m>0</m>.</li>
                <li>The determinants of a matrix and its transpose are equal: <m>\det(A^T) = \det(A)</m>.</li>
                <li>The determinant of a diagonal, or triangular matrix (upper or lower) is the product of its diagonal entries.</li>
                <li>The determinant of the product of two matrices equals the product of their determinants: <m>\det(AB) = \det(A) \cdot \det(B)</m>.</li>
            </ul>
        </p>
        <p>
            The determinant of a matrix <m>A</m> is a scalar value <m>det(A)</m> (also denoted <m>|A|</m>) that tells
            important information about the linear transformation represented by that matrix, such as whether tha matrix is
            invertible or how it scales space during transformations. In geometric terms for 2D and 3D space, the determinant
            of a square matrix measures the <em>signed area</em> of the parallelogram (in 2D) or the <em>signed volume</em>
            of parallelepiped (in 3D) formed by the row (or column) vectors of the matrix.
        </p>
    </introduction>

    <subsection xml:id="subsec-determinant-of-matrix">
        <title>Determinant of Matrix</title>
        <p>
            In Sage, the determinant of a matrix can be computed using the <c>det</c> command:
        </p>
        <sage>
            <input>
                A = matrix([[2, 3, 5], [7, 11, 13], [17, 19, 23]])
                A.det()
            </input>
        </sage>

        <p>
            A matrix is <em>singular</em> if it does not have an inverse, which occurs when its determinant is zero.
            In Sage, to check whether a matrix is singular or not the method <c>is_singular()</c> can be used.
            Note that just as with the determinant, this method is only applicable to square matrices.
        </p>
        <sage>
            <input>
                M = matrix([[1, 2], [2, 4]])
                M.is_singular()
            </input>
        </sage>
        <p>
            The matrix <m>M</m> is singular because its determinant is zero, hence does not have an inverse.
            Note that Sage offers several other methods to help check various properties of matrices related
            to determinants and inverses.
        </p>
        <p>
            Note that Sage defines a method <c>is_square()</c> that returns <c>True</c> if the matrix is square.
        </p>
        <sage>
            <input>
                M.is_square()
            </input>
        </sage>
    </subsection>

    <subsection xml:id="subsec-inverse-of-matrix">
        <title>Inverse of Matrix</title>
        <p>
            <idx>
                <h>Matrices</h>
                <h>Inverse</h>
            </idx>
            The inverse of a matrix <m>A</m> is denoted as <m>A^{-1}</m> and is defined as the matrix that,
            when multiplied with <m>A</m>, yields the identity matrix. The inverse exists only if the determinant
            of the matrix is non-zero. In Sage, the inverse of a matrix can be computed using the <c>inverse</c> method:
        </p>
        <sage>
            <input>
                A.inverse()
            </input>
        </sage>
        <p>
            The method <c>is_invertible()</c> returns <c>True</c> if the matrix has an inverse.
        </p>
        <sage>
            <input>
                M.is_invertible()
            </input>
        </sage>
        <p>
            The inverse of a matrix has several important properties:
            <ul>
                <li>The inverse of the identity matrix is itself: <m>I^{-1} = I</m>.</li>
                <li>The inverse of a product of matrices is the product of their inverses in reverse order: <m>(AB)^{-1} = B^{-1}A^{-1}</m>.</li>
                <li>The inverse of a transpose is the transpose of the inverse: <m>(A^T)^{-1} = (A^{-1})^T</m>.</li>
                <li>The inverse of an inverse returns the original matrix: <m>(A^{-1})^{-1} = A</m>.</li>
            </ul>
        </p>
    </subsection>

    <subsection xml:id="subsec-minors-cofactors-and-adjugate">
        <title>Minors, Cofactors and the Adjugate Matrix</title>
        <p>
            <idx>
                <h>Matrices</h>
                <h>Adjugate</h>
                <h>Cofactor</h>
            </idx>
            The <em>adjugate</em> of a matrix <m>A</m> is the transpose of its cofactor matrix <m>C</m>:
            <m>adj(A)=C^T</m>. In Sage, the <c>adjugate</c> method returns the adjugate matrix.
        </p>
        <sage>
            <input>
                M.adjugate()
            </input>
        </sage>
        <p>
            Currently, Sage does not have an implementation to directly extract the <em>minors</em> of a matrix.
            To compute a minor <m>M_{ij}</m> of a matrix <m>A</m>, Sage offers <c>delete_rows()</c> and <c>delete_columns()</c>
            methods which can be used to delete a specific row <m>i</m> and column <m>j </m> and obtain a submatrix whose
            determinant yields a minor <m>M_{ij}</m>, which then can be used to compute the <em>cofactor</em>
            <m>c_{ij}=(-1)^{i+j}M_{ij}</m>.
        </p>
        <sage>
            <input>
                A = matrix([[1, 2, 3], [5, 7, 11], [13, 17, 19]])

                # By Removing first row and second column
                minor_1_2 = det(A.delete_rows([0]).delete_columns([1]))
                print("m_12:", minor_1_2)

                # Cofactor c_12
                cofactor_1_2=(-1)^(1+2) * minor_1_2
                print("c_12:", cofactor_1_2)
            </input>
        </sage>
        <p>
            Generally, given a square matrix of order <m>n \times n</m>, the cofactors are obtained by varying the row and column
            indices <m>i</m> and <m>j</m> from <m>1</m> to <m>n</m>. These computed cofactors constitute the entries of
            the cofactor matrix <m>C = \big[c_{ij}\big]</m>.
        </p>
        <sage>
            <input>
                n = A.nrows()

                # Cofactor matrix
                C = matrix([
                    [(-1)^(i + j) * det(A.delete_rows([i - 1]).delete_columns([j - 1])) for j in range(1, n + 1)]
                    for i in range(1, n + 1)
                ])
                C
            </input>
        </sage>
        <p>
            Note that the transpose of the cofactor matrix is the adjugate matrix
        </p>
        <sage>
            <input>
                A.adjugate() == C.transpose()
            </input>
        </sage>
        <p>
            The Adjugate matrix can then be used to compute the inverse of a non-singular matrix using the formula:
            <m>A^{-1} = \frac{1}{\det(A)} \cdot \text{adj}(A)</m>.
        </p>
        <sage>
            <input>
                A.inverse() == A.adjugate() / A.det()
            </input>
        </sage>
        <p>
            Note that the although methods <c>minor()</c> and <c>cofactor()</c> are currently not implemented in
            Sage, leveraging the command <c>adj</c> can help compute them, like shown below.
        </p>
        <sage>
            <input>
                cof = A.adjugate().transpose()

                # Cofactor c_12
                cofactor_1_2 = cof[0, 1]
                print("c_12:", cofactor_1_2)

                # Minor M_12
                minor_1_2 = cofactor_1_2 / ((-1)^(1 + 2))
                print("m_12:", minor_1_2)
            </input>
        </sage>
    </subsection>
</section>
