<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="sec-special-matrices"
    xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Special Matrices</title>

    <introduction xml:id="special-matrices">
        <p>
            <idx>
                <h>Matrices</h>
                <h>Zero Matrix</h>
                <h>Diagonal Matrix</h>
            </idx>
            Some matrices occur frequently enough to be given special names:
            <ul>
                <li>
                    <p>
                        The <em>zero matrix</em> contains only zeros and acts as the additive identity.
                        The command <c>zero_matrix(m, n)</c> creates an <m>m</m> by <m>n</m> zero matrix.
                    </p>
                    <sage>
                        <input>
                            # 2x5 zero matrix
                            zero_matrix(2,5)
                        </input>
                    </sage>
                    <p>
                        For a square matrix, the command can be shortened to <c>zero_matrix(n)</c> like
                        in the example below.
                    </p>
                    <sage>
                        <input>
                            # 3x3 zero matrix
                            zero_matrix(3)
                        </input>
                    </sage>
                </li>
                <li>
                    <p>
                        A <em>diagonal matrix</em> is a square matrix that has zero entries everywhere outside
                        the <em>main diagonal</em>. Note that a diagonal matrix may have some or all its diagonal
                        entries equal to <m>0</m>. Sage offers the command <c>diagonal_matrix([a_1, a_2, ..., a_n])</c>
                        to create a diagonal matrix with diagonal entries <m>a_1, a_2, \ldots, a_n</m> and <m>0</m> elsewhere.
                    </p>
                    <p>
                        Here is an example of a <m>3 \times 3</m> diagonal matrix with entries <m>2</m>, <m>4</m>, and <m>6</m>
                        on the main diagonal.
                    </p>
                    <sage>
                        <input>
                            diagonal_matrix([2, 4, 6])
                        </input>
                    </sage>
                    <p>
                        Diagonal matrices are simple to multiply and often appear in eigenvalue problems which
                        we will see in upcoming chapters. To check if a matrix is diagonal, the method
                        <c>is_diagonal()</c> can be used.
                    </p>
                    <sage>
                        <input>
                            d=diagonal_matrix([1, 3, 5])
                            d.is_diagonal()
                        </input>
                    </sage>
                </li>
                <li>
                    <p>
                        An <em>identity matrix</em> is a diagonal matrix with all its diagonal elements
                        equals to 1. The command <c>identity_matrix(n)</c> returns an identity matrix if dimension
                        <m>n \times n</m>. Here isa= an example of a <m>5 \times 5</m> identity matrix.
                    </p>
                    <sage>
                        <input>
                            identity_matrix(5)
                        </input>
                    </sage>
                </li>
                <li>
                    <p>
                        Although the <em>ones</em> matrix is not a predefined matrix in Sage, it is common in
                        other similar computational frameworks such as Octave©, and MATLAB©. Essentially,
                        it is a matrix where every entry is 1. It can be created by leverage the built-in list
                        duplication operator <c>*</c> applied on a list of ones.
                    </p>
                    <sage>
                        <input>
                            # 2x4 matrix with all entries equal to 1
                            matrix([[1]*4]*2)
                        </input>
                    </sage>
                </li>
                <li>
                    <idx>
                        <h>Matrices</h>
                        <h>Upper Triangular Matrix</h>
                        <h>Lower Triangular Matrix</h>
                    </idx>
                    <p>
                        Two other common types of square matrices are the <em>Upper</em> and <em>Lower</em> triangular matrices.
                        A square matrix an upper triangular matrix if all entries below the diagonal are zero. The following
                        is an example of a <m>3 \times 3</m> upper triangular matrix.
                    </p>
                    <sage>
                        <input>
                            Matrix([[1, 2, 3], [0, 4, 5], [0, 0, 6]])
                        </input>
                    </sage>
                    <p>
                        Note that Sage does not have these predefined commands to create such matrices, or check if a square
                        matrix is of either type (upper or lower triangular). They can however be obtained by leveraging the
                        <c>LU()</c> method that we will see later on.
                    </p>
                </li>
            </ul>
        </p>
    </introduction>
</section>
