<section xml:id="sec-solving-equations-with-Matrices" xmlns:xi="http://www.w3.org/2001/XInclude">
    <title>Solving Equations with Matrices</title>
    <p>
        As an introduction to solving equations in Sage, we worked with equations symbolically. Now, we will learn how to solve systems of equations with vectors and matrices.
    </p>
    <p>
        Let's solve the following system of equations:
    </p>
    <md>
        <mrow>\amp x + 2y \amp = 4</mrow>
        <mrow>\amp y - z \amp = 0</mrow>
        <mrow>\amp x + 2z \amp = 4</mrow>
    </md>
    <p>
         In Sage, we can create an coefficient matrix using the <code>matrix</code> function.
    </p>
    <sage>
        <input>
            A = matrix([
                    [1, 2, 0],
                    [0, 1, -1],
                    [1, 0, 2]
                ])
            print(A)
        </input>
        <output>

        </output>
    </sage>
    <p>
        Next, provide a list of constants to the <c>vector</c> function.
    </p>
    <sage>
        <input>
            b = vector([4, 0, 4])
            print(b)
        </input>
        <output>

        </output>
    </sage>
    <p>
        Finally, call the <c>solve_right</c> method on the matrix and pass the solution vector as its argument.
    </p>
    <sage>
        <input>
            A.solve_right(b)
        </input>
        <output>

        </output>
    </sage>
    <p>
        The output <c>(4, 0, 0)</c> expresses a solution to the system:
    </p>
    <md>
        <mrow> x = 4, \; y = 0, \; z = 0 </mrow>
    </md>
    <p>
        While this is a solution to the system, it is not the only one. The system has infinitely many solutions. We can use symbolic operations to express the general solution as a function of a parameter.
    </p>

    <sage>
        <input>
            var('x y z')
            eq1 = x + 2*y == 4
            eq2 = y - z == 0
            eq3 = x + 2*z == 4
            solve([eq1, eq2, eq3], x, y, z)
        </input>
        <output>

        </output>
    </sage>

</section>
